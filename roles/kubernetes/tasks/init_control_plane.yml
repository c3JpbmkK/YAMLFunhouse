---
- name: Generate certificate key
  shell: kubeadm certs certificate-key
  register: certificate_key

- name: Setup temp files directory
  file:
    state: directory
    path: "{{ kubeadm_config_files_dir }}"

- name: Copy config files for init-node
  loop: "{{ kubeadm_init_node_config_files }}"
  template:
    src: "{{ item }}.j2"
    dest: "{{ kubeadm_config_files_dir }}/{{ item }}.yml"

- name: Remove exising config file
  file:
    state: absent
    path: "{{ kubeadm_config_file }}"

- name: Touch config file
  file:
    state: touch
    path: "{{ kubeadm_config_file }}"

- name: Create kubeadm config file
  loop: "{{ kubeadm_init_node_config_files }}"
  shell: "cat {{ kubeadm_config_files_dir }}/{{ item }}.yml >> {{ kubeadm_config_file }}"

- name: Remove temp files directory
  file:
    state: absent
    path: "{{ kubeadm_config_files_dir }}"

- name: Reset before init
  shell: kubeadm reset --force

- name: kubeadm init 
  shell: kubeadm init --config "{{ kubeadm_config_file }}" --upload-certs
  register: init_output

- name: Symlink kubeconfig
  include_tasks: subtasks/symlink_kubeconfig.yml
  vars:
    config_file_name: admin.conf

- name: Deploy metrics server
  vars:
    metrics_server_manifest: "https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml"
  command: kubectl apply -f  "{{ metrics_server_manifest }}"

- name: Get list of secrets
  register: secrets
  k8s_info:
    namespace: kube-system
    kind: Secret

- name: Get kubeadm bootstrap token secret
  no_log: true
  shell: kubeadm token list | grep "{{ auth_extra_groups }}" | awk '{print $1}'
  register: bootstrap_token

- name: Get ca cert hash
  register: ca_cert_hash
  shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null |sha256sum --tag | sed "s/.*= /sha256:/"

- name: Recreate facts directory
  file:
    path: /etc/ansible/facts.d
    state: absent

- name: Setup facts directory 
  file:
    path: /etc/ansible/facts.d
    state: directory

- name: Save secrets as fact file
  no_log: true
  loop:
  - {"key":"certificate_key","value":"{{ certificate_key.stdout }}"}
  - {"key":"ca_cert_hash","value":"{{ ca_cert_hash.stdout }}"}
  - {"key":"bootstrap_token","value":"{{ bootstrap_token.stdout }}"}
  ini_file:
    path: /etc/ansible/facts.d/bootstrap.fact
    section: kubernetes
    option: "{{ item.key }}"
    value: "{{ item.value }}"
